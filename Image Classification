{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sanjeev050223/DL/blob/main/dl_activituy.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ELlHGidybdKz",
        "outputId": "f35617ea-6cf0-4492-cd9f-3b22aa32badf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c0j8Ls0PbrBi"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import os\n",
        "import matplotlib.pyplot as plt\n",
        "import tensorflow as tf\n",
        "import PIL\n",
        "import pathlib\n",
        "from PIL import Image\n",
        "from pathlib import Path\n",
        "from tensorflow.keras import layers,models"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IjqBeAzMbrHk"
      },
      "outputs": [],
      "source": [
        "loaded_data = Path(\"/content/drive/My Drive/DLact\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8m8OvLL3brQf",
        "outputId": "b37907c1-047f-49f8-f08b-24f96fff3ec0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total number of food images found: 1206\n"
          ]
        }
      ],
      "source": [
        "total_image_count = 0\n",
        "food_categories = list(loaded_data.glob('*'))\n",
        "if len(food_categories) > 0:\n",
        "    for food_category in food_categories:\n",
        "        food_images = list(food_category.glob('*.jpg')) + list(food_category.glob('*.png'))\n",
        "        if len(food_images) > 0:\n",
        "            total_image_count += len(food_images)\n",
        "    print(f\"Total number of food images found: {total_image_count}\")\n",
        "else:\n",
        "    print(\"No food categories (subfolders) found in the directory.\")\n",
        "\n",
        "set_height, set_width = 180, 180\n",
        "batch_size=32"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A6KJrbpZbrZh",
        "outputId": "63465685-f23a-490e-dafa-b2798441b7db"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 1206 files belonging to 3 classes.\n",
            "Using 905 files for training.\n",
            "Found 1206 files belonging to 3 classes.\n",
            "Using 301 files for validation.\n",
            "['chai', 'chapati', 'kadai_paneer']\n"
          ]
        }
      ],
      "source": [
        "training_images = tf.keras.preprocessing.image_dataset_from_directory(\n",
        "    loaded_data,\n",
        "    subset=\"training\",\n",
        "    validation_split = 0.25,\n",
        "    seed=123,\n",
        "    image_size=(set_height, set_width),\n",
        "    batch_size=batch_size\n",
        ")\n",
        "validation_images = tf.keras.preprocessing.image_dataset_from_directory(\n",
        "    loaded_data,\n",
        "    subset=\"validation\",\n",
        "    validation_split=0.25,\n",
        "    seed=123,\n",
        "    image_size=(set_height, set_width),\n",
        "    batch_size=batch_size\n",
        ")\n",
        "food_classes = training_images.class_names\n",
        "print(food_classes)\n",
        "dataset_classes = 3\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "model =Sequential([])\n",
        "layers.experimental.preprocessing.Rescaling(1./255, input_shape=(set_height, set_width, 3))\n",
        "model.add(layers.Conv2D(16, 3, padding='same', activation='relu'))\n",
        "model.add(layers.MaxPooling2D())\n",
        "model.add(layers.Conv2D(32, 3, padding='same', activation='relu'))\n",
        "model.add(layers.MaxPooling2D())\n",
        "model.add(layers.Conv2D(64, 3, padding='same', activation='relu'))\n",
        "model.add(layers.MaxPooling2D())\n",
        "model.add(layers.Flatten())\n",
        "model.add(layers.Dense(128, activation='relu'))\n",
        "model.add(layers.Dense(dataset_classes,activation='softmax'))\n",
        "model.compile(optimizer='adam',\n",
        "              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n",
        "              metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "w0g2C9Dfggwa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "c57ftcb6a7dE"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def create_cnn_model(dropout_rate):\n",
        "    model = Sequential([\n",
        "        layers.experimental.preprocessing.Rescaling(1./255, input_shape=(set_height, set_width, 3)),\n",
        "        layers.Conv2D(16, 3, padding='same', activation='relu'),\n",
        "        layers.MaxPooling2D(),\n",
        "        layers.Conv2D(32, 3, padding='same', activation='relu'),\n",
        "        layers.MaxPooling2D(),\n",
        "        layers.Conv2D(64, 3, padding='same', activation='relu'),\n",
        "        layers.MaxPooling2D(),\n",
        "        layers.Flatten(),\n",
        "        layers.Dense(128, activation='relu'),\n",
        "        layers.Dropout(dropout_rate),  # Add dropout layer with the specified rate\n",
        "        layers.Dense(dataset_classes, activation='softmax')\n",
        "    ])\n",
        "\n",
        "    model.compile(optimizer='adam',\n",
        "                  loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n",
        "                  metrics=['accuracy'])\n",
        "\n",
        "    return model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tRsZ2IARDg8N",
        "outputId": "12a8d4e3-1f20-4783-99b6-1de64bc76f62"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Training model with dropout rate: 0.0\n",
            "Epoch 1/20\n",
            "29/29 [==============================] - 61s 2s/step - loss: 1.1756 - accuracy: 0.4950 - val_loss: 0.7909 - val_accuracy: 0.6213\n",
            "Epoch 2/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.6255 - accuracy: 0.6862 - val_loss: 0.6950 - val_accuracy: 0.6844\n",
            "Epoch 3/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.5407 - accuracy: 0.7635 - val_loss: 0.7267 - val_accuracy: 0.6744\n",
            "Epoch 4/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.4214 - accuracy: 0.8265 - val_loss: 0.8027 - val_accuracy: 0.6213\n",
            "Epoch 5/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.3154 - accuracy: 0.8740 - val_loss: 0.8105 - val_accuracy: 0.6877\n",
            "Epoch 6/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.2657 - accuracy: 0.8939 - val_loss: 0.7692 - val_accuracy: 0.7575\n",
            "Epoch 7/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.1588 - accuracy: 0.9470 - val_loss: 1.0286 - val_accuracy: 0.6047\n",
            "Epoch 8/20\n",
            "29/29 [==============================] - 58s 2s/step - loss: 0.1514 - accuracy: 0.9448 - val_loss: 1.0522 - val_accuracy: 0.6711\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0748 - accuracy: 0.9768 - val_loss: 1.2157 - val_accuracy: 0.6711\n",
            "Epoch 10/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0665 - accuracy: 0.9801 - val_loss: 1.2746 - val_accuracy: 0.7342\n",
            "Epoch 11/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0341 - accuracy: 0.9934 - val_loss: 1.3708 - val_accuracy: 0.6944\n",
            "Epoch 12/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0120 - accuracy: 1.0000 - val_loss: 1.4714 - val_accuracy: 0.7176\n",
            "Epoch 13/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.0054 - accuracy: 1.0000 - val_loss: 1.6891 - val_accuracy: 0.6811\n",
            "Epoch 14/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0032 - accuracy: 1.0000 - val_loss: 1.7092 - val_accuracy: 0.6977\n",
            "Epoch 15/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0020 - accuracy: 1.0000 - val_loss: 1.7515 - val_accuracy: 0.6910\n",
            "Epoch 16/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 1.8061 - val_accuracy: 0.6944\n",
            "Epoch 17/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 1.8035 - val_accuracy: 0.6944\n",
            "Epoch 18/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 9.8321e-04 - accuracy: 1.0000 - val_loss: 1.8738 - val_accuracy: 0.6944\n",
            "Epoch 19/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 7.4153e-04 - accuracy: 1.0000 - val_loss: 1.9246 - val_accuracy: 0.7010\n",
            "Epoch 20/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 5.8718e-04 - accuracy: 1.0000 - val_loss: 1.9341 - val_accuracy: 0.7043\n",
            "Training model with dropout rate: 0.2\n",
            "Epoch 1/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.9611 - accuracy: 0.5613 - val_loss: 0.7634 - val_accuracy: 0.6080\n",
            "Epoch 2/20\n",
            "29/29 [==============================] - 60s 2s/step - loss: 0.6679 - accuracy: 0.6663 - val_loss: 0.7490 - val_accuracy: 0.6379\n",
            "Epoch 3/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.5927 - accuracy: 0.7227 - val_loss: 0.7698 - val_accuracy: 0.5947\n",
            "Epoch 4/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.5498 - accuracy: 0.7425 - val_loss: 0.7075 - val_accuracy: 0.7043\n",
            "Epoch 5/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.4332 - accuracy: 0.8221 - val_loss: 0.7244 - val_accuracy: 0.7176\n",
            "Epoch 6/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.3135 - accuracy: 0.8718 - val_loss: 0.7080 - val_accuracy: 0.7442\n",
            "Epoch 7/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.2233 - accuracy: 0.9193 - val_loss: 0.7621 - val_accuracy: 0.7409\n",
            "Epoch 8/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.1420 - accuracy: 0.9624 - val_loss: 0.8815 - val_accuracy: 0.7076\n",
            "Epoch 9/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.1385 - accuracy: 0.9459 - val_loss: 1.1566 - val_accuracy: 0.6279\n",
            "Epoch 10/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.1279 - accuracy: 0.9580 - val_loss: 0.9680 - val_accuracy: 0.6944\n",
            "Epoch 11/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0521 - accuracy: 0.9834 - val_loss: 1.0549 - val_accuracy: 0.7409\n",
            "Epoch 12/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0440 - accuracy: 0.9912 - val_loss: 1.1918 - val_accuracy: 0.7375\n",
            "Epoch 13/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0269 - accuracy: 0.9923 - val_loss: 1.4340 - val_accuracy: 0.7143\n",
            "Epoch 14/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0163 - accuracy: 0.9989 - val_loss: 1.3853 - val_accuracy: 0.7342\n",
            "Epoch 15/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0096 - accuracy: 0.9989 - val_loss: 1.4201 - val_accuracy: 0.7276\n",
            "Epoch 16/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0171 - accuracy: 0.9934 - val_loss: 1.5779 - val_accuracy: 0.6611\n",
            "Epoch 17/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.0426 - accuracy: 0.9890 - val_loss: 1.3475 - val_accuracy: 0.7110\n",
            "Epoch 18/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0207 - accuracy: 0.9978 - val_loss: 1.5865 - val_accuracy: 0.7176\n",
            "Epoch 19/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.0207 - accuracy: 0.9945 - val_loss: 1.3780 - val_accuracy: 0.7375\n",
            "Epoch 20/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0067 - accuracy: 1.0000 - val_loss: 1.4690 - val_accuracy: 0.7608\n",
            "Training model with dropout rate: 0.4\n",
            "Epoch 1/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 1.3485 - accuracy: 0.4818 - val_loss: 1.1443 - val_accuracy: 0.4884\n",
            "Epoch 2/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.7505 - accuracy: 0.6508 - val_loss: 0.7376 - val_accuracy: 0.6811\n",
            "Epoch 3/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.6557 - accuracy: 0.6873 - val_loss: 0.7288 - val_accuracy: 0.6744\n",
            "Epoch 4/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.5715 - accuracy: 0.7536 - val_loss: 0.7189 - val_accuracy: 0.6678\n",
            "Epoch 5/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.5042 - accuracy: 0.7735 - val_loss: 0.7025 - val_accuracy: 0.7043\n",
            "Epoch 6/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.3960 - accuracy: 0.8276 - val_loss: 0.9437 - val_accuracy: 0.6811\n",
            "Epoch 7/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.3112 - accuracy: 0.8685 - val_loss: 0.9733 - val_accuracy: 0.6678\n",
            "Epoch 8/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.2834 - accuracy: 0.8818 - val_loss: 0.8532 - val_accuracy: 0.6944\n",
            "Epoch 9/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.2558 - accuracy: 0.9116 - val_loss: 1.0516 - val_accuracy: 0.6279\n",
            "Epoch 10/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.1660 - accuracy: 0.9315 - val_loss: 0.9972 - val_accuracy: 0.6844\n",
            "Epoch 11/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.1710 - accuracy: 0.9392 - val_loss: 1.0257 - val_accuracy: 0.6877\n",
            "Epoch 12/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.1255 - accuracy: 0.9702 - val_loss: 1.2546 - val_accuracy: 0.6910\n",
            "Epoch 13/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0983 - accuracy: 0.9657 - val_loss: 1.3944 - val_accuracy: 0.6910\n",
            "Epoch 14/20\n",
            "29/29 [==============================] - 57s 2s/step - loss: 0.0929 - accuracy: 0.9646 - val_loss: 1.3793 - val_accuracy: 0.6977\n",
            "Epoch 15/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.0413 - accuracy: 0.9945 - val_loss: 1.5840 - val_accuracy: 0.6877\n",
            "Epoch 16/20\n",
            "29/29 [==============================] - 63s 2s/step - loss: 0.0430 - accuracy: 0.9878 - val_loss: 1.5964 - val_accuracy: 0.7043\n",
            "Epoch 17/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0543 - accuracy: 0.9801 - val_loss: 1.5281 - val_accuracy: 0.6412\n",
            "Epoch 18/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0473 - accuracy: 0.9890 - val_loss: 1.7193 - val_accuracy: 0.7043\n",
            "Epoch 19/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0288 - accuracy: 0.9945 - val_loss: 1.8866 - val_accuracy: 0.6777\n",
            "Epoch 20/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.0189 - accuracy: 0.9956 - val_loss: 2.0175 - val_accuracy: 0.7143\n"
          ]
        }
      ],
      "source": [
        " #Define a list of dropout rates to try\n",
        "dropout_rates = [0.0, 0.2, 0.4]\n",
        "\n",
        "# Store training history for each model\n",
        "training_histories = []\n",
        "\n",
        "# Train models with different dropout rates\n",
        "for dropout_rate in dropout_rates:\n",
        "    print(f\"Training model with dropout rate: {dropout_rate}\")\n",
        "    model = create_cnn_model(dropout_rate)\n",
        "    history = model.fit(\n",
        "        training_images,\n",
        "        validation_data=validation_images,\n",
        "        epochs=epochs\n",
        "    )\n",
        "    training_histories.append((dropout_rate, history))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "67ANFIEVbPxS",
        "outputId": "d90cfa47-8cee-42af-c9c7-32997f111124"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Visualize the training history for different dropout rates\n",
        "plt.figure(figsize=(12, 8))\n",
        "for dropout_rate, history in training_histories:\n",
        "    plt.plot(history.history['val_accuracy'], label=f'Dropout Rate: {dropout_rate}')\n",
        "plt.title('Validation Accuracy vs. Epochs for Different Dropout Rates')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Validation Accuracy')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = create_cnn_model(0.2)\n",
        "epochs=20\n",
        "\n",
        "CNN_model2 =model.fit(\n",
        "  training_images,\n",
        "  validation_data=validation_images,\n",
        "  epochs=epochs\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jDuF_MGlchUU",
        "outputId": "1900148f-c91d-45f0-8b1a-ecb530a04126"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/keras/src/backend.py:5714: UserWarning: \"`sparse_categorical_crossentropy` received `from_logits=True`, but the `output` argument was produced by a Softmax activation and thus does not represent logits. Was this intended?\n",
            "  output, from_logits = _get_logits(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "29/29 [==============================] - 54s 2s/step - loss: 1.0749 - accuracy: 0.4762 - val_loss: 0.8264 - val_accuracy: 0.6146\n",
            "Epoch 2/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.7117 - accuracy: 0.6221 - val_loss: 0.7488 - val_accuracy: 0.6478\n",
            "Epoch 3/20\n",
            "29/29 [==============================] - 55s 2s/step - loss: 0.6272 - accuracy: 0.6807 - val_loss: 0.7811 - val_accuracy: 0.6844\n",
            "Epoch 4/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.5999 - accuracy: 0.7116 - val_loss: 0.7189 - val_accuracy: 0.6412\n",
            "Epoch 5/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.4873 - accuracy: 0.8044 - val_loss: 0.6783 - val_accuracy: 0.7243\n",
            "Epoch 6/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.4045 - accuracy: 0.8519 - val_loss: 0.6975 - val_accuracy: 0.7342\n",
            "Epoch 7/20\n",
            "29/29 [==============================] - 56s 2s/step - loss: 0.3008 - accuracy: 0.8818 - val_loss: 0.7255 - val_accuracy: 0.7309\n",
            "Epoch 8/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.2639 - accuracy: 0.8972 - val_loss: 0.8738 - val_accuracy: 0.6711\n",
            "Epoch 9/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.1959 - accuracy: 0.9193 - val_loss: 0.7562 - val_accuracy: 0.7608\n",
            "Epoch 10/20\n",
            "29/29 [==============================] - 52s 2s/step - loss: 0.1236 - accuracy: 0.9635 - val_loss: 0.8144 - val_accuracy: 0.7708\n",
            "Epoch 11/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.1119 - accuracy: 0.9646 - val_loss: 1.0149 - val_accuracy: 0.7708\n",
            "Epoch 12/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.0857 - accuracy: 0.9779 - val_loss: 0.9300 - val_accuracy: 0.7276\n",
            "Epoch 13/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.0586 - accuracy: 0.9768 - val_loss: 0.9376 - val_accuracy: 0.7409\n",
            "Epoch 14/20\n",
            "29/29 [==============================] - 54s 2s/step - loss: 0.0362 - accuracy: 0.9878 - val_loss: 1.0654 - val_accuracy: 0.7475\n",
            "Epoch 15/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0178 - accuracy: 0.9956 - val_loss: 1.1739 - val_accuracy: 0.7442\n",
            "Epoch 16/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0103 - accuracy: 0.9989 - val_loss: 1.3334 - val_accuracy: 0.7276\n",
            "Epoch 17/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0135 - accuracy: 0.9978 - val_loss: 1.4408 - val_accuracy: 0.7342\n",
            "Epoch 18/20\n",
            "29/29 [==============================] - 49s 2s/step - loss: 0.0096 - accuracy: 1.0000 - val_loss: 1.4938 - val_accuracy: 0.7342\n",
            "Epoch 19/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0110 - accuracy: 0.9978 - val_loss: 1.3394 - val_accuracy: 0.7409\n",
            "Epoch 20/20\n",
            "29/29 [==============================] - 53s 2s/step - loss: 0.0062 - accuracy: 1.0000 - val_loss: 1.4730 - val_accuracy: 0.7375\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.save('/content/drive/My Drive/DL/best_model.h5')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D6dycOE5y-BP",
        "outputId": "92e6b4c0-c182-460f-baea-360abaad2176"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3000: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n",
            "  saving_api.save_model(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def predict_input_image(img):\n",
        "  img_4d=img.reshape(-1,180,180,3)\n",
        "  prediction=model.predict(img_4d)[0]\n",
        "  return {food_classes[i]: float(prediction[i]) for i in range(3)}"
      ],
      "metadata": {
        "id": "qU7ATEqecuQK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QL_TLn6zdV5C"
      },
      "outputs": [],
      "source": [
        "!pip install gradio\n",
        "import gradio as gr"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "image = gr.inputs.Image(shape=(180,180))\n",
        "label = gr.outputs.Label(num_top_classes=3)\n",
        "gr.Interface(fn=predict_input_image, inputs=image, outputs=label,interpretation='default').launch(debug='True',share=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 767
        },
        "id": "HDlkJy5xMabt",
        "outputId": "6c97aee5-3211-4c86-8cdf-1d2f256632cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-24-fcdb4e2fc79b>:1: GradioDeprecationWarning: Usage of gradio.inputs is deprecated, and will not be supported in the future, please import your component from gradio.components\n",
            "  image = gr.inputs.Image(shape=(180,180))\n",
            "<ipython-input-24-fcdb4e2fc79b>:1: GradioDeprecationWarning: `optional` parameter is deprecated, and it has no effect\n",
            "  image = gr.inputs.Image(shape=(180,180))\n",
            "<ipython-input-24-fcdb4e2fc79b>:2: GradioDeprecationWarning: Usage of gradio.outputs is deprecated, and will not be supported in the future, please import your components from gradio.components\n",
            "  label = gr.outputs.Label(num_top_classes=3)\n",
            "<ipython-input-24-fcdb4e2fc79b>:2: GradioUnusedKwargWarning: You have unused kwarg parameters in Label, please remove them: {'type': 'auto'}\n",
            "  label = gr.outputs.Label(num_top_classes=3)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n",
            "Running on public URL: https://37fb5e14c865a00c4c.gradio.live\n",
            "\n",
            "This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<div><iframe src=\"https://37fb5e14c865a00c4c.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 37ms/step\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
